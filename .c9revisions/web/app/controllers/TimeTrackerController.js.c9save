{"ts":1343195833784,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"( function( timetracker ) {\n    'use strict';\n    \n    timetracker.controller( 'TimeTrackerController', function( $scope ) {\n        \n        $scope.times = [];\n        $scope.runningTimer = null;\n        \n        $scope.times = JSON.parse(window.localStorage['times']||'[]');\n        \n        $scope.startTimeTracker = function() {\n            $scope.runningTimer = {\n                'dateFrom': new Date(),\n                'dateTo': null,\n                'duration': null,\n                'comment': ''\n            };\n        };\n        \n        $scope.stopTimeTracker = function() {\n            $scope.runningTimer.dateTo = new Date();\n            $scope.times.push( $scope.runningTimer );\n            $scope.runningTimer = null;\n            window.localStorage['times'] = JSON.stringify($scope.times);\n        };\n        \n        $scope.deleteTime = function(index) {\n            $scope.times.splice(index,1);\n            window.localStorage['times'] = JSON.stringify($scope.times);\n        };\n        \n    } );\n    \n} )( window.timetracker );"]],"start1":0,"start2":0,"length1":0,"length2":1047}]],"length":1047}
{"contributors":[],"silentsave":false,"ts":1343195912685,"patch":[[{"diffs":[[0,"pe ) {\n        \n"],[1,"        var undoStack = [];\n        \n"],[0,"        $scope.t"]],"start1":118,"start2":118,"length1":32,"length2":69},{"diffs":[[0,"lStorage"],[-1,"['"],[0,"times"],[-1,"']"],[0,"||'[]');"]],"start1":288,"start2":288,"length1":25,"length2":21},{"diffs":[[0,"localStorage"],[-1,"['"],[0,"times"],[-1,"']"],[0," = JSON.stri"]],"start1":785,"start2":785,"length1":33,"length2":29},{"diffs":[[0,"on(index) {\n"],[1,"            undoStack.push( $scope.times[ index ] );\n"],[0,"            "]],"start1":889,"start2":889,"length1":24,"length2":77},{"diffs":[[0,"rage"],[-1,"['"],[1,"."],[0,"times"],[-1,"']"],[0," = J"]],"start1":1023,"start2":1023,"length1":17,"length2":14}]],"length":1126,"saved":false}
{"ts":1343196002684,"patch":[[{"diffs":[[0,"    "],[-1,"$scope.times.push( "],[1,"addTime("],[0,"$sco"]],"start1":680,"start2":680,"length1":27,"length2":16},{"diffs":[[0,"ingTimer"],[-1," "],[0,");\n     "]],"start1":703,"start2":703,"length1":17,"length2":16},{"diffs":[[0,"ll;\n"],[-1,"            window.localStoragetimes = JSON.stringify($scope.times);\n"],[0,"    "]],"start1":750,"start2":750,"length1":77,"length2":8},{"diffs":[[0,"mes);\n        };"],[-1,""],[0,""],[1,"\n        \n        $scope.undo = function() {\n            addTime( undoStack.pop() );\n        };\n        \n        function addTime(time) {\n            $scope.times.push( time );\n            window.localStoragetimes = JSON.stringify($scope.times);\n        }"],[0,"\n        \n    } "]],"start1":979,"start2":979,"length1":32,"length2":287}]],"length":1300,"saved":false}
{"ts":1343196017249,"patch":[[{"diffs":[[0,"    "],[-1,"var "],[1,"$scope."],[0,"undo"]],"start1":138,"start2":138,"length1":12,"length2":15},{"diffs":[[0,"        "],[1,"$scope."],[0,"undoStac"]],"start1":827,"start2":827,"length1":16,"length2":23},{"diffs":[[0,"ddTime( "],[1,"$scope."],[0,"undoStac"]],"start1":1063,"start2":1063,"length1":16,"length2":23}]],"length":1317,"saved":false}
{"contributors":[],"silentsave":false,"ts":1343210553112,"patch":[[{"diffs":[[0,"   \n    "],[-1,""],[0,""],[1,"var CURRENT_DATA_VERSION = 1;\n    \n    "],[0,"timetrac"]],"start1":47,"start2":47,"length1":16,"length2":55},{"diffs":[[0,"N.parse("],[1," "],[0,"window.l"]],"start1":311,"start2":311,"length1":16,"length2":17},{"diffs":[[0,"rage"],[1,"."],[0,"times"],[1," "],[0,"||"],[1," "],[0,"'[]'"],[1," "],[0,");\n "]],"start1":335,"start2":335,"length1":19,"length2":23},{"diffs":[[0,"[]' );\n        \n"],[1,"        if( !window.localStorage.dataVersion ) {\n            window.localStorage.dataVersion = CURRENT_DATA_VERSION;\n        }\n        \n        if( window.localStorage.dataVersion != CURRENT_DATA_VERSION ) {\n            console.warn( \"Implement updating old data version to new\" );\n        }\n        \n"],[0,"        $scope.s"]],"start1":350,"start2":350,"length1":32,"length2":333},{"diffs":[[0,"() {\n           "],[1," var time ="],[0," $scope.runningT"]],"start1":962,"start2":962,"length1":32,"length2":43},{"diffs":[[0,"imer"],[-1,".dateTo = new Date();\n            addTime($scope.runningTimer);\n            $scope.runningTimer = null;\n        };\n        \n        $scope.deleteTime = function(index) {"],[1,";\n            $scope.runningTimer = null;\n            \n            time.dateTo = new Date();\n            time.duration = calculateDuration(time.dateFrom, time.dateTo);\n            \n            addTime(time);\n        };\n        \n        $scope.deleteTime = function(time) {\n            var index = $scope.times.indexOf(time);\n            // TODO: set a limit for the undo stack to prevent leaking memory when the app is never reopened / refreshed."],[0,"\n   "]],"start1":1005,"start2":1005,"length1":177,"length2":454},{"diffs":[[0,"ice("],[1," "],[0,"index,"],[-1,"1);"],[1," 1 );\n            "],[0,"\n   "]],"start1":1544,"start2":1544,"length1":17,"length2":33},{"diffs":[[0," JSON.stringify("],[1," "],[0,"$scope.times);\n "]],"start1":1613,"start2":1613,"length1":32,"length2":33},{"diffs":[[0,"fy( $scope.times"],[1," "],[0,");\n        };\n  "]],"start1":1626,"start2":1626,"length1":32,"length2":33},{"diffs":[[0,"lStorage"],[1,"."],[0,"times = "]],"start1":1863,"start2":1863,"length1":16,"length2":17},{"diffs":[[0,"ringify("],[1," "],[0,"$scope.t"]],"start1":1887,"start2":1887,"length1":16,"length2":17},{"diffs":[[0,"pe.times"],[-1,")"],[1," );\n        }\n        \n        var MINUTE_SECONDS = 60;\n        var HOUR_SECONDS = MINUTE_SECONDS * 60;\n        var DAY_SECONDS = HOUR_SECONDS * 24;\n        function calculateDuration( dateFrom, dateTo ) {\n            var diff = dateTo.getTime() - dateFrom.getTime();\n            diff = Math.round( diff / 1000 ); // don't care for milliseconds\n            \n            var days = diff > DAY_SECONDS ? Math.floor( diff / DAY_SECONDS ) : 0;\n            diff -= days * DAY_SECONDS;\n            \n            var hours = diff > HOUR_SECONDS ? Math.floor( diff / HOUR_SECONDS ) : 0;\n            diff -= hours * HOUR_SECONDS;\n            \n            var minutes = diff > MINUTE_SECONDS ? Math.floor( diff / MINUTE_SECONDS ) : 0;\n            \n            var seconds = diff - minutes * MINUTE_SECONDS;\n            return {\n                'days': days,\n                'hours': hours,\n                'minutes': minutes,\n                'seconds': seconds\n            }"],[0,";\n      "]],"start1":1900,"start2":1900,"length1":17,"length2":979}]],"length":2932,"saved":false}
{"ts":1343210558472,"patch":[[{"diffs":[[0,"g memory"],[1,"\n            //"],[0," when th"]],"start1":1403,"start2":1403,"length1":16,"length2":31}]],"length":2947,"saved":false}
